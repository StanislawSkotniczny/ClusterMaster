name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-info:
    name: PR Information
    runs-on: ubuntu-latest
    
    steps:
    - name: PR Details
      run: |
        echo "PR Title: ${{ github.event.pull_request.title }}"
        echo "PR Author: ${{ github.event.pull_request.user.login }}"
        echo "Base Branch: ${{ github.event.pull_request.base.ref }}"
        echo "Head Branch: ${{ github.event.pull_request.head.ref }}"

    - name: Check PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
        requireScope: false

  file-changes:
    name: Detect File Changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check file changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'

  backend-validation:
    name: Validate Backend Changes
    needs: file-changes
    if: needs.file-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest black flake8

    - name: Run tests
      working-directory: ./backend
      run: pytest

    - name: Check code formatting
      working-directory: ./backend
      run: black --check .

  frontend-validation:
    name: Validate Frontend Changes
    needs: file-changes
    if: needs.file-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run tests
      working-directory: ./frontend
      run: npm run test:unit

    - name: Type check
      working-directory: ./frontend
      run: npm run type-check

    - name: Build
      working-directory: ./frontend
      run: npm run build

  comment-coverage:
    name: Comment Coverage
    needs: [backend-validation, frontend-validation]
    if: always()
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      
    steps:
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'âœ… All validation checks completed! Check the workflow runs for detailed results.'
          })
