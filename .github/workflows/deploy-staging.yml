name: Deploy to Staging

on:
  push:
    branches: [stab]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.your-domain.com
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
          tags: |
            type=raw,value=staging
            type=sha,prefix=staging-

      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for Frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
          tags: |
            type=raw,value=staging
            type=sha,prefix=staging-

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deployment Summary
        run: |
          echo "## üöÄ Staging Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Backend Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}:staging\`" >> $GITHUB_STEP_SUMMARY
          echo "**Frontend Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:staging\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY

  notify:
    name: Notify Team
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Create deployment notification
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ needs.deploy-staging.result }}';
            const emoji = status === 'success' ? '‚úÖ' : '‚ùå';
            const message = `${emoji} Staging deployment ${status}`;

            console.log(message);

            // Opcjonalnie: Wy≈õlij notyfikacjƒô na Slack/Discord
            // Mo≈ºesz u≈ºyƒá webhook lub dedykowanego action
